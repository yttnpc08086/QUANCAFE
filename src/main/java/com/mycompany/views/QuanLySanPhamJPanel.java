/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.Helper.ConnectUtil;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class QuanLySanPhamJPanel extends javax.swing.JPanel {

    private DefaultTableModel modelSanPhansd;
    private DefaultTableModel modelSanPhamksd;

    /**
     * Creates new form QuanLySanPhamJPanel
     */
    public QuanLySanPhamJPanel() {
        initComponents();
        initializeTableModels();
        loadSanPhamData();

        btnDonViDouong.addActionListener(e -> openQLDonViDoUongDialog());
        btnThemDo.addActionListener(e -> openQLDoUongDialog());
//        btnThanhToan.addActionListener(e -> openChucNangThanhToanJDialog());
    }

    private void openQLDonViDoUongDialog() {
        // Tạo và hiển thị cửa sổ QLDonViDoUongJDialog
        QLDonViDoUongJDialog dialog = new QLDonViDoUongJDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        dialog.setVisible(true);
    }

    private void openQLDoUongDialog() {
        QLDoUongJDialog dialog = new QLDoUongJDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        dialog.setVisible(true);
    }

    private void initializeTableModels() {
        modelSanPhansd = (DefaultTableModel) tblSanPhansd.getModel();
        modelSanPhamksd = (DefaultTableModel) tblSanPHamksd.getModel();
        // Set the column names to match the SQL table columns
        modelSanPhansd.setColumnIdentifiers(new Object[]{"ID", "Tên Sản Phẩm", "Giá", "Đơn Vị", "Loại", "Hình", "Trạng Thái"});
        modelSanPhamksd.setColumnIdentifiers(new Object[]{"ID", "Tên Sản Phẩm", "Giá", "Đơn Vị", "Loại", "Hình", "Trạng Thái"});
    }

//    private void loadSanPhamData() {
//        try {
//            String querySanPhansd = "SELECT * FROM SanPham WHERE Trangthai = 1"; // Active products
//            ResultSet rsSanPhansd = ConnectUtil.query(querySanPhansd);
//            populateTable(modelSanPhansd, rsSanPhansd);
//        } catch (Exception e) {
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu.", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        }
//    }
    private void loadSanPhamData() {
        loadSanPhamDataByStatus(1); // Load data with "Sử dụng" status
        loadSanPhamDataByStatus(0); // Load data with "Không sử dụng" status
    }

    private void loadSanPhamDataByStatus(int status) {
        DefaultTableModel model = (status == 1) ? modelSanPhansd : modelSanPhamksd;
        String querySanPhansd = "SELECT * FROM SanPham WHERE Trangthai = ?";
        try {
            ResultSet rsSanPhansd = ConnectUtil.query(querySanPhansd, status);
            populateTable(model, rsSanPhansd);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void populateTable(DefaultTableModel model, ResultSet rs) throws Exception {
        model.setRowCount(0);
        while (rs.next()) {
            String imagePath = rs.getString("Hinh");
            ImageIcon imageIcon = new ImageIcon(imagePath);

            // Đảm bảo kích thước hình ảnh phù hợp với cột
            Image image = imageIcon.getImage().getScaledInstance(250, 250, Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(image);

            model.addRow(new Object[]{
                rs.getString("ID_Sanpham"),
                rs.getString("TenSP"),
                rs.getInt("Gia"),
                rs.getString("ID_DonviSP"),
                rs.getString("ID_LoaiSP"),
                imageIcon, // Hiển thị hình ảnh trong cột
                rs.getInt("Trangthai") == 1 ? "Sử dụng" : "Không sử dụng"
            });
        }
    }

    private void filterTable(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(modelSanPhansd);
        tblSanPhansd.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + query));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdoksd = new javax.swing.JRadioButton();
        rdosd = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        tbnLamMoi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtdonvi = new javax.swing.JTextField();
        txtloai = new javax.swing.JTextField();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPhansd = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPHamksd = new javax.swing.JTable();
        btnThemDo = new javax.swing.JButton();
        btnDonViDouong = new javax.swing.JButton();

        setBackground(new java.awt.Color(241, 241, 241));

        jPanel1.setBackground(new java.awt.Color(241, 241, 241));
        jPanel1.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(241, 241, 241));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Tìm kiếm(Tên hoặc Mã)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(10, 400, 0, 0);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(310, 130, 100, 17);

        txtMaSP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSPActionPerformed(evt);
            }
        });
        jPanel1.add(txtMaSP);
        txtMaSP.setBounds(310, 150, 228, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tên sản phẩm");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(310, 220, 120, 17);

        txtTenSP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSPActionPerformed(evt);
            }
        });
        txtTenSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenSPKeyReleased(evt);
            }
        });
        jPanel1.add(txtTenSP);
        txtTenSP.setBounds(310, 240, 228, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Loại đồ uống");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(310, 310, 110, 17);

        jPanel5.setBackground(new java.awt.Color(241, 241, 241));

        lblHinh.setBackground(new java.awt.Color(204, 204, 255));
        lblHinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblHinh.setText("      Click To Donwload Image");
        lblHinh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(20, 60, 210, 240);

        txtGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtGia);
        txtGia.setBounds(600, 330, 230, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Giá");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(600, 310, 60, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Đơn vị");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(600, 130, 70, 17);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Trạng thái");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(600, 220, 100, 17);

        rdoksd.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroup1.add(rdoksd);
        rdoksd.setText("Không sử dụng");
        rdoksd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoksdActionPerformed(evt);
            }
        });
        jPanel1.add(rdoksd);
        rdoksd.setBounds(600, 240, 110, 21);

        rdosd.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroup1.add(rdosd);
        rdosd.setSelected(true);
        rdosd.setText("Sử dụng");
        rdosd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdosdActionPerformed(evt);
            }
        });
        jPanel1.add(rdosd);
        rdosd.setBounds(720, 240, 90, 21);

        btnThem.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(960, 150, 101, 34);

        btnXoa.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(null);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(960, 270, 101, 34);

        btnSua.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(960, 210, 101, 34);

        tbnLamMoi.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tbnLamMoi.setText("Làm mới");
        tbnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnLamMoiActionPerformed(evt);
            }
        });
        jPanel1.add(tbnLamMoi);
        tbnLamMoi.setBounds(960, 330, 99, 34);

        jLabel1.setBackground(new java.awt.Color(255, 102, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("QUẢN LÝ ĐỒ UỐNG");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(330, 20, 380, 44);
        jPanel1.add(txtdonvi);
        txtdonvi.setBounds(600, 150, 160, 30);
        jPanel1.add(txtloai);
        txtloai.setBounds(310, 340, 190, 30);

        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });

        tblSanPhansd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm ", "Loại đồ uống ", "Giá", "Đợn vị", "Hình ảnh"
            }
        ));
        tblSanPhansd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhansdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPhansd);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 93, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
        );

        tabs.addTab("Sản Phẩm sử dụng", jPanel2);

        tblSanPHamksd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm", "Loại đồ uống ", "Giá", "Đơn vị", "Hình ảnh"
            }
        ));
        tblSanPHamksd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPHamksdMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPHamksd);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 88, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
        );

        tabs.addTab("Sản Phẩm không sử dụng", jPanel3);

        jPanel1.add(tabs);
        tabs.setBounds(10, 460, 1220, 300);

        btnThemDo.setBackground(new java.awt.Color(0, 255, 0));
        btnThemDo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThemDo.setText("Chọn đồ uống");
        btnThemDo.setBorder(null);
        btnThemDo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemDoMouseClicked(evt);
            }
        });
        btnThemDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDoActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemDo);
        btnThemDo.setBounds(760, 30, 160, 40);

        btnDonViDouong.setBackground(new java.awt.Color(0, 255, 0));
        btnDonViDouong.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDonViDouong.setText("Chọn Đơn vị đồ uống");
        btnDonViDouong.setBorder(null);
        btnDonViDouong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDonViDouongMouseClicked(evt);
            }
        });
        btnDonViDouong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonViDouongActionPerformed(evt);
            }
        });
        jPanel1.add(btnDonViDouong);
        btnDonViDouong.setBounds(760, 80, 160, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        String searchText = txtTimKiem.getText().trim();
        filterTableByProductCode(searchText);
    }

    private void filterTableByProductCode(String productCode) {
        DefaultTableModel model = (DefaultTableModel) tblSanPhansd.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        tblSanPhansd.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" + productCode, 0)); // Cột 0 là cột chứa mã sản phẩm
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtTenSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenSPKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPKeyReleased

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn hình ảnh");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif"));
  
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            ImageIcon imageIcon = new ImageIcon(selectedFile.getPath());
            lblHinh.setIcon(imageIcon);
            lblHinh.setText(""); // Xóa text nếu có
            // Cập nhật đường dẫn hình ảnh vào trường tương ứng nếu cần
        }
    }//GEN-LAST:event_lblHinhMouseClicked

    private boolean validateInputs() {
        if (txtMaSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtMaSP.requestFocus();
            return false;
        }
        if (txtTenSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtTenSP.requestFocus();
            return false;
        }
        if (txtGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtGia.requestFocus();
            return false;
        }
        try {
            int gia = Integer.parseInt(txtGia.getText().trim());
            if (gia < 0) {
                JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số dương.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtGia.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số nguyên.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtGia.requestFocus();
            return false;
        }
        if (txtdonvi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Đơn vị sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtdonvi.requestFocus();
            return false;
        }
        if (txtloai.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Loại sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtloai.requestFocus();
            return false;
        }
        return true;
    }

    private void clearInputFields() {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtGia.setText("");
        txtdonvi.setText("");
        txtloai.setText("");
        lblHinh.setIcon(null);
        lblHinh.setText(""); // Xóa text nếu có
        rdosd.setSelected(true);
    }


    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (!validateInputs()) {
            return;
        }
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        int gia = Integer.parseInt(txtGia.getText());
        String donvi = txtdonvi.getText();
        String loai = txtloai.getText();
        String hinh = lblHinh.getIcon() != null ? ((ImageIcon) lblHinh.getIcon()).getDescription() : ""; // Lấy đường dẫn hình ảnh
        int trangThai = rdosd.isSelected() ? 1 : 0;

        String query = "INSERT INTO SanPham (ID_Sanpham, TenSP, Gia, ID_DonviSP, ID_LoaiSP, Trangthai, Hinh) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try {
            ConnectUtil.update(query, maSP, tenSP, gia, donvi, loai, trangThai, hinh);
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công!");
            loadSanPhamData();
            clearInputFields();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        clearInputFields();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSanPhansd.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để xóa.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String maSP = tblSanPhansd.getValueAt(selectedRow, 0).toString();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String query = "DELETE FROM SanPham WHERE ID_Sanpham = ?";
            try {
                ConnectUtil.update(query, maSP);
                JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
                loadSanPhamData();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            clearInputFields();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (!validateInputs()) {
            return;
        }
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        int gia = Integer.parseInt(txtGia.getText());
        String donvi = txtdonvi.getText();
        String loai = txtloai.getText();
        String hinh = lblHinh.getIcon() != null ? ((ImageIcon) lblHinh.getIcon()).getDescription() : ""; // Lấy đường dẫn hình ảnh
        int trangThai = rdosd.isSelected() ? 1 : 0;

        String query = "UPDATE SanPham SET TenSP = ?, Gia = ?, ID_DonviSP = ?, ID_LoaiSP = ?, Trangthai = ?, Hinh = ? WHERE ID_Sanpham = ?";
        try {
            ConnectUtil.update(query, tenSP, gia, donvi, loai, trangThai, hinh, maSP);
            JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thành công!");
            loadSanPhamData();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        clearInputFields();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void updateProduct() {
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        int gia = Integer.parseInt(txtGia.getText());
        String donvi = txtdonvi.getText();
        String loai = txtloai.getText();
        int trangThai = rdosd.isSelected() ? 1 : 0;

        String query = "UPDATE SanPham SET TenSP = ?, Gia = ?, ID_DonviSP = ?, ID_LoaiSP = ?, Trangthai = ? WHERE ID_Sanpham = ?";
        try {
            ConnectUtil.update(query, tenSP, gia, donvi, loai, trangThai, maSP);
            JOptionPane.showMessageDialog(this, "Sửa sản phẩm thành công!");
            loadSanPhamData();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void tbnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnLamMoiActionPerformed
        // TODO add your handling code here:
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtloai.setText("");
        txtGia.setText("");
        txtdonvi.setText("");
        lblHinh.setText("");
        rdosd.setSelected(true);
        loadSanPhamData();
    }//GEN-LAST:event_tbnLamMoiActionPerformed

    private void txtTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPActionPerformed

    private void txtMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSPActionPerformed
        // TODO add your handling code here:
        String maSP = txtMaSP.getText().trim();

        if (maSP.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "SELECT * FROM SanPham WHERE ID_Sanpham = ?";
        try {
            ResultSet rs = ConnectUtil.query(query, maSP);
            if (rs.next()) {
                txtTenSP.setText(rs.getString("TenSP"));
                txtGia.setText(String.valueOf(rs.getInt("Gia")));
                txtdonvi.setText(rs.getString("ID_DonviSP"));
                txtloai.setText(rs.getString("ID_LoaiSP"));
                if (rs.getInt("Trangthai") == 1) {
                    rdosd.setSelected(true);
                } else {
                    rdoksd.setSelected(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm sản phẩm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtMaSPActionPerformed

    private void tblSanPhansdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhansdMouseClicked
        // TODO add your handling code here:
        int row = tblSanPhansd.getSelectedRow();
        if (row == -1) {
            return;
        }
        txtMaSP.setText((String) tblSanPhansd.getValueAt(row, 0));
        txtTenSP.setText((String) tblSanPhansd.getValueAt(row, 1));
        txtGia.setText(tblSanPhansd.getValueAt(row, 2).toString());
        txtdonvi.setText((String) tblSanPhansd.getValueAt(row, 3));
        txtloai.setText((String) tblSanPhansd.getValueAt(row, 4));
        ImageIcon imageIcon = (ImageIcon) tblSanPhansd.getValueAt(row, 5);
        lblHinh.setIcon(imageIcon); // Cập nhật icon của JLabel
        lblHinh.setText(""); // Xóa text nếu có
        rdosd.setSelected(true);

    }//GEN-LAST:event_tblSanPhansdMouseClicked

    private void tblSanPHamksdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPHamksdMouseClicked
        // TODO add your handling code here:
        int row = tblSanPHamksd.getSelectedRow();
        if (row == -1) {
            return;
        }
        txtMaSP.setText((String) tblSanPHamksd.getValueAt(row, 0));
        txtTenSP.setText((String) tblSanPHamksd.getValueAt(row, 1));
        txtGia.setText(tblSanPHamksd.getValueAt(row, 2).toString());
        txtdonvi.setText((String) tblSanPHamksd.getValueAt(row, 3));
        txtloai.setText((String) tblSanPHamksd.getValueAt(row, 4));
        ImageIcon imageIcon = (ImageIcon) tblSanPHamksd.getValueAt(row, 5);
        lblHinh.setIcon(imageIcon); // Cập nhật icon của JLabel
        lblHinh.setText(""); // Xóa text nếu có
        rdosd.setSelected(false);
    }//GEN-LAST:event_tblSanPHamksdMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabsMouseClicked

    private void rdosdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdosdActionPerformed
        // TODO add your handling code here:
        loadSanPhamDataByStatus(1);
    }//GEN-LAST:event_rdosdActionPerformed

    private void rdoksdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoksdActionPerformed
        // TODO add your handling code here:
        loadSanPhamDataByStatus(0);
    }//GEN-LAST:event_rdoksdActionPerformed

    private void btnThemDoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemDoMouseClicked

    private void btnThemDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemDoActionPerformed

    private void btnDonViDouongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDonViDouongMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDonViDouongMouseClicked

    private void btnDonViDouongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonViDouongActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_btnDonViDouongActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDonViDouong;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemDo;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JRadioButton rdoksd;
    private javax.swing.JRadioButton rdosd;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblSanPHamksd;
    private javax.swing.JTable tblSanPhansd;
    private javax.swing.JButton tbnLamMoi;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtdonvi;
    private javax.swing.JTextField txtloai;
    // End of variables declaration//GEN-END:variables
}
